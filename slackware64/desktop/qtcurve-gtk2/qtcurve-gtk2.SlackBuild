#!/bin/sh
#
# Slackware build script for qtcurve
#
# Copyright 2008-2011 Corrado Franco (http://conraid.net)
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Exit on most errors
set -e

# Set variables:
CWD=$(pwd)

PRGNAME=${PRGNAME:-QtCurve-Gtk2}
PKGNAME=$(echo $PRGNAME | tr A-Z a-z)
VERSION=${VERSION:-1.8.16}
BUILD=${BUILD:-1}
TAG=${TAG:-sl}
TMP=${TMP:-/tmp/buildpkgs}
PKG=$TMP/package-$PKGNAME
OUTPUT=${OUTPUT:-$CWD}
DOCS="$PKG/usr/doc/$PKGNAME-$VERSION"
SOURCE="http://craigd.wikispaces.com/file/view/$PRGNAME-$VERSION.tar.bz2"

# Insert document files in this variable
DOCFILES="AUTHORS COPYING README ChangeLog"

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
    case "$( uname -m )" in
        i?86) ARCH=i686 ;;
        arm*) ARCH=arm ;;
        # Unless $ARCH is already set, use uname -m for all other archs:
        *) ARCH=$( uname -m ) ;;
    esac
fi

# Set compiling FLAGS
case "$ARCH" in
    i486)
        SLKCFLAGS="-O2 -march=i486 -mtune=i686"; CHOST="i486"
        SLKLDFLAGS=""; LIBDIRSUFFIX=""
        ;;
    i686)
        SLKCFLAGS="-O2 -march=i686 -pipe -fomit-frame-pointer"; CHOST="i486"
        SLKLDFLAGS=""; LIBDIRSUFFIX=""
        ;;
    x86_64)
        SLKCFLAGS="-O2 -fPIC -pipe -fomit-frame-pointer"; CHOST="x86_64"
        SLKLDFLAGS="-L/lib64 -L/usr/lib64"; LIBDIRSUFFIX="64"
        ;;
    *)
        SLKCFLAGS="-O2"; CHOST=$ARCH
        SLKLDFLAGS=""; LIBDIRSUFFIX=""
        ;;
esac

# Source file availability:
if [ ! -e $CWD/$PKGNAME-$VERSION.tar.bz2 ] ; then
  wget $SOURCE
fi  

# Extract source
mkdir -p $PKG
cd $TMP
rm -rf QtCurve-* $PKG
tar xjvf $CWD/QtCurve-Gtk2-${VERSION}.tar.bz2
cd $PRGNAME-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# Configure
mkdir build
cd build
cmake \
 -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
 -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
 -DCMAKE_LD_FLAGS:STRING="$SLKLDFLAGS" \
 -DCMAKE_INSTALL_PREFIX=/usr \
 -DMAN_INSTALL_DIR=/usr/man \
 -DSYSCONF_INSTALL_DIR=/etc \
 -DQTC_MODIFY_MOZILLA=false \
 -DLIB_SUFFIX=${LIBDIRSUFFIX} \
 -DQTC_STYLE_SUPPORT=true \
 ..
 
# Build and install 
make VERBOSE=1
make install/strip VERBOSE=1 DESTDIR=$PKG
cd ..

# Add a documentation directory:
mkdir -p ${DOCS}
for i in ${DOCFILES}; do
    if [ -e ${i} ]; then
        if ! [ -L ${i} ]; then
            cp -a ${i} ${DOCS}
        else
            cp -LRp ${i} ${DOCS}
        fi
    fi;
done

# Add a slackbuild script:
install -Dm644 $CWD/$PKGNAME.SlackBuild $DOCS/$PKGNAME.SlackBuild

# Add slack-desc
install -Dm644 $CWD/slack-desc $PKG/install/slack-desc

if [ -x "$(which requiredbuilder 2>/dev/null)" ];then
  requiredbuilder -y -v -s $CWD $PKG   # add "-c -b" if you have binary files in /usr/share 
  [ -e install/slack-required ]&& cat install/slack-required > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-required
fi

# Create package:
cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-${BUILD}${TAG}.${PKGTYPE:-txz}

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP $PKG
fi

#!/bin/sh
# Heavily based on the Slackware 14.0 SlackBuild
# http://www.cl.cam.ac.uk/~mgk25/jbigkit
# Packager Andrea Sciucca ( gohanz at infinito.it)
# Last build 6c33c (seic33c AT gmail DOT com)
# Thanks to Iskar Enev <iskar.enev[@]gmail.com>
# http://www.slacky.eu
#
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# Exit on most errors
set -e

# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=jbigkit
TMP=${TMP:-/tmp/buildpkgs/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-2.0}
ARCH=${ARCH:-x86_64}
JOBS=${JOBS:--j2}
BUILD=${BUILD:-1}
TAG=${TAG:-sl}

# Download sorce tarball if still not present
SOURCE="http://www.cl.cam.ac.uk/~mgk25/download/$PKGNAME-$VERSION.tar.gz"

if [ ! -e $CWD/$PKGNAME-$VERSION.tar.gz ]; then
 wget $SOURCE
fi

# Set compiling FLAGS
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"; SLKLDFLAGS=""; LIBDIRSUFFIX=""; CHOST="i486"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"; SLKLDFLAGS=""; LIBDIRSUFFIX=""; CHOST="i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"; SLKLDFLAGS="-L/usr/lib64"; LIBDIRSUFFIX="64"; CHOST="x86_64"
fi

# Create building directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT


# Decompress the source tarball
cd $TMP
tar xvzf $CWD/$PKGNAME-$VERSION.tar.gz

echo -e "\E[0;32m+---------------------------+\E[0;0m"
echo -e "\E[0;32m| Start SlackBuild JBIG-KIT |\E[0;0m"
echo -e "\E[0;32m+---------------------------+\E[0;0m"

# Adjust permissions and ownerships
cd $PKGNAME
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# Build the shared library first
cd libjbig
  make $JOBS libjbig.a CFLAGS="$SLKCFLAGS" 
  gcc -shared -o libjbig.so.$VERSION -Wl,-soname=libjbig.so.$VERSION \
    $(ar t libjbig.a)
  ln -snf libjbig.so.$VERSION libjbig.so
  make clean
cd -

# ... and all the rest
make $JOBS CCFLAGS="$SLKCFLAGS"


# Installing binary
install -m 755 -p -D pbmtools/jbgtopbm   $PKG/usr/bin/jbgtopbm
install -m 755 -p -D pbmtools/jbgtopbm85 $PKG/usr/bin/jbgtopbm85
install -m 755 -p -D pbmtools/pbmtojbg   $PKG/usr/bin/pbmtojbg  
install -m 755 -p -D pbmtools/pbmtojbg85 $PKG/usr/bin//pbmtojbg85

# Installing library and headers
mkdir -p $PKG/usr/{lib$LIBDIRSUFFIX,include}
cp -a libjbig/libjbig.* $PKG/usr/lib${LIBDIRSUFFIX}
cp libjbig/*.h $PKG/usr/include

# Installing manpage
mkdir -p $PKG/usr/man/{man1,man5}
cp pbmtools/*.5 $PKG/usr/man/man5
cp pbmtools/*.1 $PKG/usr/man/man1


# Strip binaries and shared objects, if present
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)


# Add documentation files: readme, changelog and so on
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
cp -a \
  ANNOUNCE CHANGES COPYING INSTALL TODO  \
  $PKG/usr/doc/$PKGNAME-$VERSION
chmod 644 $PKG/usr/doc/$PKGNAME-$VERSION/*


# Also add the slack-desk file and this slackbuild to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-desc
cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$PKGNAME.SlackBuild



# Compress the man pages if present
if [ -d $PKG/usr/man ]; then
    ( cd $PKG/usr/man
      find . -type f -exec gzip -9 {} \;
      for i in $( find . -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
    )
fi



# Find and print dependencies into slack-required file
cd $PKG
chown -R root:root $PKG
if [ -x /usr/bin/requiredbuilder ];then
requiredbuilder -y -v -s  $CWD $PKG
fi
# Create txz package
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}


# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi



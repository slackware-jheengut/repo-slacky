#!/bin/sh

# Heavily based on the Slackware 14.0 SlackBuild (v1)

# Written by Andrea Sciucca ( gohanz AT infinito.it )
# Last build from 6c33c ( seic33c AT gmail DOT com )

# Slackware build script for sidplay2-libs
# Official Site: http://sidplay2.sourceforge.net/

# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

set -e

PKGNAME=sidplay2-libs
VERSION=${VERSION:-2.1.1}
BUILD=${BUILD:-3}
TAG=${TAG:-sl}
ARCH=${ARCH:-x86_64}

SOURCE="http://ftp.debian.org/debian/pool/main/s/sidplay-libs/sidplay-libs_$VERSION.orig.tar.gz"
TAR=
DIR=sidplay-libs-$VERSION

# If EULA
if [ -e EULA.TXT ];then
  more EULA.TXT
  echo "Do you accept terms? (yes/[no])"
  read ACCEPT
  if [ "$ACCEPT" != "yes" ];then
    echo; echo "SlackBuild Aborted!!"
    exit 1
  fi
fi

# Does not touch following if not needed
CWD=$(pwd)
TMP=${TMP:-/tmp/buildpkgs/$PKGNAME}
PKG=$TMP/package-$PKGNAME
OUTPUT=${OUTPUT:-$CWD}
TAR=${TAR:-$(basename $SOURCE)}
DIR=${DIR:-$(echo "$TAR"|sed -r 's/(\.tar|)(.gz|.bz2|)$//')}

if [ ! -e $CWD/$TAR ];then
  wget $SOURCE
fi

CHOST="i486"
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  CHOST="x86_64"
fi

rm -rf $TMP
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
tar xvf $CWD/$TAR
cd $DIR

zcat $CWD/sidplay-libs_2.1.1-8.diff.gz | patch -p1

chown -R root:root .
chmod -R u+w,go+r-w,a-s .

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib$LIBDIRSUFFIX \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --enable-shared=yes \
  --enable-static=no \
  --build=$CHOST-slackware-linux
make
make install DESTDIR=$PKG



mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/Slackbuild
( cd $TMP/$DIR/builders/hardsid-builder
  mkdir $PKG/usr/doc/$PKGNAME-$VERSION/hardsid-builder
  cp -a COPYING INSTALL \
    $PKG/usr/doc/$PKGNAME-$VERSION/hardsid-builder
  cd $TMP/$DIR/libsidplay
  mkdir $PKG/usr/doc/$PKGNAME-$VERSION/libsidplay
  cp -a AUTHORS COPYING ChangeLog INSTALL README TODO \
    $PKG/usr/doc/$PKGNAME-$VERSION/libsidplay
  cd $TMP/$DIR/libsidutils
  mkdir $PKG/usr/doc/$PKGNAME-$VERSION/libsidutils
  cp -a AUTHORS COPYING ChangeLog INSTALL README TODO \
    $PKG/usr/doc/$PKGNAME-$VERSION/libsidutils
  cd $TMP/$DIR/resid
  mkdir $PKG/usr/doc/$PKGNAME-$VERSION/resid
  cp -a AUTHORS COPYING ChangeLog INSTALL NEWS README THANKS TODO \
    $PKG/usr/doc/$PKGNAME-$VERSION/resid
  cd $TMP/$DIR/debian
  cp -a changelog \
    $PKG/usr/doc/$PKGNAME-$VERSION/ChangeLog.Debian
)

cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/Slackbuild/$PKGNAME.SlackBuild
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/Slackbuild/slack-desc

if [ -d $PKG/usr/man ]; then
    ( cd $PKG/usr/man
      find . -type f -exec gzip -9 {} \;
      for i in $( find . -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
    )
fi

( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
[ -e $CWD/doinst.sh ] && cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
chown -R root:root $PKG

if [ -x "$(which requiredbuilder 2>/dev/null)" ];then
  requiredbuilder -y -v  -s $CWD $PKG
fi

/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP
fi

#!/bin/sh
# Heavily based on the Slackware 14.0 SlackBuild
# http://www.live555.com
# Packager Andrea Sciucca ( gohanz at infinito.it)
# Last build from 6c33c (seic33c AT gmail DOT com)
# http://www.slacky.eu
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# Exit on most errors
set -e

# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=live
TMP=${TMP:-/tmp/buildpkgs/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-2013.01.19}
ARCH=${ARCH:-x86_64} # i686 or x86_64
JOBS=${JOBS:--j2}
BUILD=${BUILD:-1}
TAG=${TAG:-sl}

SOURCE="http://www.live555.com/liveMedia/public/$PKGNAME.$VERSION.tar.gz"

# Download sorce tarball if still not present
if [ ! -e $CWD/$PKGNAME.$VERSION.tar.gz ]; then
wget -c $SOURCE
fi

if [ "$ARCH" = "x86_64" ]; then
   LIBDIRSUFFIX="64"
fi

# Create build directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT

# Decompress the source tarball
cd $TMP
tar xvzf $CWD/$PKGNAME.$VERSION.tar.gz

echo -e "\E[0;32m+--------------------------+\E[0;0m"
echo -e "\E[0;32m| Start SlackBuild Live555 |\E[0;0m"
echo -e "\E[0;32m+--------------------------+\E[0;0m"

# Adjust permissions and ownerships
cd $PKGNAME
chmod -R u+w,go+r-w,a-s .
chown -R root:root .

./genMakefiles linux
make $JOBS


# Strip binaries and shared objects, if present
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)


#Add documentation files: readme, changelog and so on
mkdir -p $PKG/usr/doc/$PKGNAME'555'-$VERSION/SlackBuild
cp -a COPYING README $PKG/usr/doc/$PKGNAME'555'-$VERSION
chmod 644 $PKG/usr/doc/$PKGNAME'555'-$VERSION/*


# Building Live555 package
mkdir -p $PKG/usr/bin
mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/live/BasicUsageEnvironment/include
mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/live/UsageEnvironment/include
mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/live/groupsock/include
mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/live/liveMedia/include



find  $TMP/$PKGNAME/testProgs/ -perm -755    -exec cp  {} /$PKG/usr/bin \;
find  $TMP/$PKGNAME/mediaServer/ -perm -755    -exec cp  {} /$PKG/usr/bin \;
rm    $PKG/usr/bin/COPYING
find  $TMP/$PKGNAME/BasicUsageEnvironment/*.a -exec cp  {} $PKG/usr/lib${LIBDIRSUFFIX}/live/BasicUsageEnvironment/ \;
cp -a $TMP/$PKGNAME/BasicUsageEnvironment/include/*.h*     $PKG/usr/lib${LIBDIRSUFFIX}/live/BasicUsageEnvironment/include

find  $TMP/$PKGNAME/UsageEnvironment/*.a      -exec cp  {} $PKG/usr/lib${LIBDIRSUFFIX}/live/UsageEnvironment/ \;
cp -a $TMP/$PKGNAME/UsageEnvironment/include/*.h*      $PKG/usr/lib${LIBDIRSUFFIX}/live/UsageEnvironment/include

find  $TMP/$PKGNAME/groupsock/*.a             -exec cp  {} $PKG/usr/lib${LIBDIRSUFFIX}/live/groupsock/ \;
cp -a $TMP/$PKGNAME/groupsock/include/*.h*                 $PKG/usr/lib${LIBDIRSUFFIX}/live/groupsock/include

find  $TMP/$PKGNAME/liveMedia/*.a             -exec cp  {} $PKG/usr/lib${LIBDIRSUFFIX}/live/liveMedia/ \;
cp -a $TMP/$PKGNAME/liveMedia/include/*.h*                 $PKG/usr/lib${LIBDIRSUFFIX}/live/liveMedia/include


# Also add the slack-desk file and this slackbuild to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME'555'-$VERSION/SlackBuild/slack-desc
cat $CWD/$PKGNAME'555'.SlackBuild > $PKG/usr/doc/$PKGNAME'555'-$VERSION/SlackBuild/$PKGNAME'555'.SlackBuild



# Linking headers directories on standard system path
cat << EOF > $PKG/install/doinst.sh
( cd usr/include ; rm -rf BasicUsageEnvironment )
( cd usr/include ; ln -sf /usr/lib${LIBDIRSUFFIX}/live/BasicUsageEnvironment/include   BasicUsageEnvironment )
( cd usr/include ; rm -rf UsageEnvironment )
( cd usr/include ; ln -sf /usr/lib${LIBDIRSUFFIX}/live/UsageEnvironment/include   UsageEnvironment )
( cd usr/include ; rm -rf groupsock )
( cd usr/include ; ln -sf /usr/lib${LIBDIRSUFFIX}/live/groupsock/include   groupsock )
( cd usr/include ; rm -rf liveMedia )
( cd usr/include ; ln -sf /usr/lib${LIBDIRSUFFIX}/live/liveMedia/include   liveMedia )
EOF


# Find and print dependencies into slack-required file
cd $PKG
chown -R root:root $PKG
if [ -x "$(which requiredbuilder 2>/dev/null)" ];then
  requiredbuilder -y -v -s $CWD $PKG   # add "-c -b" if you have binary files in /usr/share 
  [ -e install/slack-required ]&&cat install/slack-required > $PKG/usr/doc/$PKGNAME'555'-$VERSION/SlackBuild/slack-required
fi
# Create txz package
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME'555'-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}


# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi




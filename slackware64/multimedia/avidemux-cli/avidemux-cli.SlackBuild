#!/bin/sh
 
# Heavily based on the Slackware 14.0 SlackBuild (v1)
# Written by Loris Vincenzi ( http://www.slacky.eu ) 
# Last build from 6c33c (seic33c AT gmail DIT com)
 
# Slackware build script for avidemux-cli
# Official Site: http://fixounet.free.fr/avidemux/

# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
set -e

PKGNAME=avidemux
VERSION=${VERSION:-2.5.6}
BUILD=${BUILD:-1}
TAG=${TAG:-sl}
ARCH=${ARCH:-x86_64}
SOURCE="http://downloads.sourceforge.net/avidemux/${PKGNAME}_$VERSION.tar.gz"
TAR=
DIR=

if [ -e EULA.TXT ];then
  more EULA.TXT
  echo "Do you accept terms? (yes/[no])"
  read ACCEPT
  if [ "$ACCEPT" != "yes" ];then
    echo; echo "SlackBuild Aborted!!"
    exit 1
  fi
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/buildpkgs/$PKGNAME}
PKG=$TMP/package-$PKGNAME
OUTPUT=${OUTPUT:-$CWD}
TAR=${TAR:-$(basename $SOURCE)}
DIR=${DIR:-$(echo "$TAR"|sed -r 's/(\.tar|)(.gz|.bz2|)$//')}
 
if [ ! -e $CWD/$TAR ];then
  wget $SOURCE
fi

CHOST="i486"
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  CHOST="x86_64"
fi

rm -rf $TMP
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
tar xvf $CWD/$TAR
cd $DIR

chown -R root:root .
chmod -R u+w,go+r-w,a-s .

echo $(pwd)

echo "Building core ..."
if [ "$ARCH" = "x86_64" ]; then
  # Some paths are incorrectly hardcoded to "lib":
sed -i -e "s/Dir=\"lib\"/Dir=\"lib${LIBDIRSUFFIX}\"/" $(grep -lr 'Dir="lib"' .)
    fi

mkdir build
cd build

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
cmake . \
  -DCMAKE_INSTALL_PREFIX:STRING="/usr" \
  -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_VERBOSE_MAKEFILE:BOOL="TRUE" \
  -DLIB_SUFFIX:STRING="$LIBDIRSUFFIX" \
  ..

make
make DESTDIR=$PKG install/strip
cd ..

echo "Building plugins ..."

mkdir -p build_plugins
cd build_plugins

cmake \
  -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DMAN_INSTALL_DIR=/usr/man \
  -DSYSCONF_INSTALL_DIR=/etc \
  -DLIB_SUFFIX=${LIBDIRSUFFIX} \
  -DAVIDEMUX_SOURCE_DIR=$(cd .. ; pwd) \
  -DAVIDEMUX_CORECONFIG_DIR=$(cd .. ; pwd)/build/config \
  -DAVIDEMUX_INSTALL_PREFIX=$(cd .. ; pwd)/build \
  ../plugins

make
make DESTDIR=$PKG install/strip
cd -

mkdir -p $PKG/usr/man/man1
cat man/avidemux.1 | gzip -9c > $PKG/usr/man/man1/avidemux.1.gz

# Removing Qt4 and GTK2+ parts
rm -r $PKG/usr/share/avidemux
rm    $PKG/usr/bin/avidemux2_gtk
rm    $PKG/usr/bin/avidemux2_qt4

( cd $PKG
  find -iname '*gtk*' -exec rm -vf {} \;
  find -iname '*qt4*' -exec rm -vf {} \;
  find -iname '*Gtk*' -exec rm -vf {} \;
  find -iname '*QT4*' -exec rm -vf {} \;
  find -iname '*Qt*' -exec rm -vf {} \;
)

PKGNAME=$PKGNAME-cli
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
cp -a \
  AUTHORS COPYING README TODO \
  $PKG/usr/doc/$PKGNAME-$VERSION
chmod 644 $PKG/usr/doc/$PKGNAME-$VERSION/*

cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$PKGNAME.SlackBuild
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-desc

if [ -d $PKG/usr/man ]; then
    ( cd $PKG/usr/man
      find . -type f -exec gzip -9 {} \;
      for i in $( find . -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
    )
fi

( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
[ -e $CWD/doinst.sh ] && cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
chown -R root:root $PKG
 
if [ -x "$(which requiredbuilder 2>/dev/null)" ];then
  requiredbuilder -y -v -s $CWD $PKG 
fi
 
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
 
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP
fi

#!/bin/sh

# Heavily based on the Slackware 14.0 SlackBuild

# Copyright Loris Vincenzi (http://www.slacky.eu)
# Last build from 6c33c ( seic33c AT gmail DOT com )

# Slackware build script for gambas-runtime
# Official Site: http://gambas.sourceforge.net/
# Patches from ...

# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Requirements: gsl, gtkglext, imlib2, postgresql, unixODBC

set -e

# Basic information.
NAMESRC=gambas3
PKGNAME=gambas3-runtime
VERSION=${VERSION:-3.3.4}
BUILD=${BUILD:-1}
TAG=${TAG:-sl}
ARCH=${ARCH:-x86_64}
SOURCE="http://prdownloads.sourceforge.net/gambas/$NAMESRC-$VERSION.tar.bz2"
TAR=      # empty = auto
DIR=      # empty = auto
DOCS="AUTHORS COPYING ChangeLog INSTALL NEWS README*"
SLKFILES=""

# If EULA
if [ -e EULA.TXT ];then
  more EULA.TXT
  echo "Do you accept terms? (yes/[no])"
  read ACCEPT
  if [ "$ACCEPT" != "yes" ];then
    echo; echo "SlackBuild Aborted!!"
    exit 1
  fi
fi

# Do not touch following if not needed
JOBS=${JOBS:--j2}
CWD=$(pwd)
TMP=${TMP:-/tmp/buildpkgs/$PKGNAME}
PKG=$TMP/package-$NAMESRC
OUTPUT=${OUTPUT:-$CWD}
TAR=${TAR:-$(basename $SOURCE)}
DIR=${DIR:-$(echo "$TAR"|sed -r 's/(\.tar|)(.gz|.bz2|.xz|.tgz|)$//')}

if [ ! -e $CWD/$TAR ];then
  wget $SOURCE -O "$CWD/$TAR"
fi

CHOST="i486"
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  CHOST="x86_64"
fi

### Preparing Source
rm -rf $TMP
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
tar xvf $CWD/$TAR
cd $DIR

./reconf-all

# Making gambas3
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure 	--prefix=/usr \
		--sysconfdir=/etc \
		--localstatedir=/var \
		--libdir=/usr/lib${LIBDIRSUFFIX} \
		--disable-static \
		--mandir=/usr/man \
		--program-prefix= \
		--program-suffix= \
		--build=$CHOST-slackware-linux
make $JOBS
make install DESTDIR=$PKG

( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)

# Making gambas3 runtime package
mkdir -p $PKG-runtime/usr/{bin,lib${LIBDIRSUFFIX}/gambas3,share/gambas3}
cp -a $PKG/usr/share/gambas3/info/* $PKG-runtime/usr/share/gambas3
cp -a $PKG/usr/lib${LIBDIRSUFFIX}/gambas3/* $PKG-runtime/usr/lib${LIBDIRSUFFIX}/gambas3
cp -a $PKG/usr/bin/{gbc3,gba3,gbi3,gbx3,gbr3} $PKG-runtime/usr/bin

# Documentation
mkdir -p $PKG-runtime/usr/doc/$PKGNAME-$VERSION
cp -r $DOCS $PKG-runtime/usr/doc/$PKGNAME-$VERSION

mkdir -p $PKG-runtime/usr/doc/$PKGNAME-$VERSION/SlackBuild
cd $CWD
for SB in $PKGNAME.SlackBuild slack-desc doinst.sh doinst.sh.gz EULA.TXT $SLKFILES;do
  [ -e $SB ]&&cp -r $SB $PKG-runtime/usr/doc/$PKGNAME-$VERSION/SlackBuild/$SB
done

mkdir -p $PKG-runtime/install
cat $CWD/slack-desc > $PKG-runtime/install/slack-desc
[ -e $CWD/doinst.sh ] && cat $CWD/doinst.sh > $PKG-runtime/install/doinst.sh
[ -e $CWD/doinst.sh.gz ] && zcat $CWD/doinst.sh.gz > $PKG-runtime/install/doinst.sh

cd $PKG-runtime
chown -R root:root $PKG-runtime

if [ -x "$(which requiredbuilder 2>/dev/null)" ];then
  requiredbuilder -y -v -s $CWD $PKG-runtime # add "-c -b" if you have binary files in /usr/share
  [ -e install/slack-required ]&&cat install/slack-required > $PKG-runtime/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-required
fi

/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP
fi

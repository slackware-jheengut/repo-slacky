#!/bin/sh
# Heavily based on the Slackware 14.0 SlackBuild
# http://peazip.sourceforge.net
# Packager Andrea Sciucca ( gohanz at infinito.it)
# http://www.slacky.eu
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.#
#
# Exit on most errors
set -e



# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=peazip
TMP=${TMP:-/tmp/txz/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-4.7.2}
ARCH=${ARCH:-i686}
JOBS=${JOBS:--j2}
BUILD=${BUILD:-1}
TAG=${TAG:-sl}

# Download sorce tarball if still not present
SOURCE=http://sourceforge.net/projects/peazip/files/$VERSION/$PKGNAME'_'portable-$VERSION.LINUX.GTK2.tar.gz

if [ ! -e $CWD/$PKGNAME'_'portable-$VERSION.LINUX.GTK2.tar.gz ]; then
wget -c $SOURCE
fi


# Create building directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT


# Decompress the source tarball
cd $TMP

echo -e "\E[0;32m+----------------------+\E[0;0m"
echo -e "\E[0;32m| Start SlackBuild PeaZip |\E[0;0m"
echo -e "\E[0;32m+----------------------+\E[0;0m"

# Building PeaZip package
mkdir -p $PKG/usr/lib

( cd $PKG/usr/lib
  tar xvzf $CWD/$PKGNAME'_'portable-$VERSION.LINUX.GTK2.tar.gz
  mv $PKGNAME'_'portable-$VERSION.LINUX.GTK2 peazip  )

# Install the executable file.
mkdir -p $PKG/usr/bin
cat <<EOF >$PKG/usr/bin/peazip
#!/bin/sh
exec /usr/lib/peazip/peazip
EOF
chmod +x $PKG/usr/bin/peazip

# Installing desktop file menu and icons
mkdir -p $PKG/usr/share/{applications,pixmaps}
cat $CWD/peazip.png > $PKG/usr/share/pixmaps/peazip.png
mv $PKG/usr/lib/peazip/FreeDesktop_integration/"peazip-alt(all_mimetypes).desktop" $PKG/usr/share/applications/"peazip.desktop"

# Installing KDE4 service menu desktop file
mkdir -p $PKG/usr/share/kde4/services/ServiceMenus
mv $PKG/usr/lib/peazip/FreeDesktop_integration/kde4-dolphin/usr/share/kde4/services/ServiceMenus/{peazipadd,peazipext,peazipextfolder,peazipexthere,peazipopen}.desktop  $PKG/usr/share/kde4/services/ServiceMenus

# Add documentation files: readme, changelog and so on
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
mv $PKG/usr/lib/peazip/*.txt   $PKG/usr/doc/$PKGNAME-$VERSION 
chmod 644 $PKG/usr/doc/$PKGNAME-$VERSION/*


# Remove Nautilus script.
rm -r $PKG/usr/lib/peazip/FreeDesktop_integration

# Also add the slack-desk file and this slackbuild to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-desc
cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$PKGNAME.SlackBuild


# Building some post-install execution script 	
	echo "if [ -x /usr/bin/update-mime-database ]; then
  /usr/bin/update-mime-database /usr/share/mime &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh
	echo "if [ -x /usr/bin/update-desktop-database ]; then
  /usr/bin/update-desktop-database &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh
	echo "if [ -x /usr/bin/gtk-update-icon-cache ]; then
  /usr/bin/gtk-update-icon-cache  -f -q /usr/share/icons/hicolor &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh


# Find and print dependencies into slack-required file
cd $PKG
chown -R root:root $PKG
if [ -x /usr/bin/requiredbuilder ];then
requiredbuilder -y -v -s  $CWD $PKG
fi
# Create txz package
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}


# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi



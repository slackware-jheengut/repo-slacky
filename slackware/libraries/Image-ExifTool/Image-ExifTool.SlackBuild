#!/bin/sh
# Heavily based on the Slackware 14.0 Slackbuild
# http://www.sno.phy.queensu.ca/~phil/exiftool/
# http://www.slacky.eu
#
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# Exit on most errors
#set -e



# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=Image-ExifTool
TMP=${TMP:-/tmp/txz/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-9.03}
ARCH=${ARCH:-i686}
BUILD=${BUILD:-1}
TAG=${TAG:-sl}

SOURCE="http://www.sno.phy.queensu.ca/~phil/exiftool/$PKGNAME-$VERSION.tar.gz"

# Download sorce tarball if still not present
if [ ! -e $PKGNAME-$VERSION.tar.gz ]; then
wget -c $SOURCE
fi

# Create building directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT 


# Decompress the source tarball
cd $TMP
tar xvzf $CWD/$PKGNAME-$VERSION.tar.gz

# Print some funny text
echo -e "\E[0;32m+---------------------------------+\E[0;0m"
echo -e "\E[0;32m| Start SlackBuild Image ExifTool |\E[0;0m"
echo -e "\E[0;32m+---------------------------------+\E[0;0m"

# Adjust permissions and ownerships
cd $PKGNAME-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# Building  Image ExifTool
perl Makefile.PL PREFIX=/usr 
make
make test
make install DESTDIR=$PKG

chmod 755 $PKG/usr/bin/*


#Add documentation files: readme, changelog and so on
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
cp -a Changes MANIFEST README $PKG/usr/doc/$PKGNAME-$VERSION
chmod 644 $PKG/usr/doc/$PKGNAME-$VERSION/*


# Strip binaries and shared objects, if present
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)




# Also add the slack-desk file and this slackbuild to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-desc
cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$PKGNAME.SlackBuild


mv $PKG/usr/share/man $PKG/usr/man
gzip -9 $PKG/usr/man/*/*
rm -rf $PKG/usr/share



# Find and print dependencies into slack-required file
cd $PKG
chown -R root:root $PKG
if [ -x "$(which requiredbuilder 2>/dev/null)" ];then
requiredbuilder -y -v -s  $CWD $PKG
fi
# Create txz package
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi



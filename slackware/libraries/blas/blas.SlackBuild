#!/bin/sh
# Copyright 2008 Loris Vincenzi (http://www.slacky.eu)
# All rights reserved.
# Thanks to Eugene Suter <easuter@gmail.com>
# Heavily based on the Slackware 14.0 SlackBuild
# http://www.netlib.org/blas/
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Exit on most errors
set -e



# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=blas
TMP=${TMP:-/tmp/txz/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-20110419}
ARCH=${ARCH:-i486}
BUILD=${BUILD:-1}
TAG=${TAG:-sl}
# Shared library version
# This should match the versioning of blas
SOVERS=3.2.2
SOMAJOR=3


SOURCE="http://www.netlib.org/blas/blas.tgz"

# Download sorce tarball if still not present
if [ ! -e $CWD/blas.tgz ]; then
wget -c $SOURCE
fi


# Set compiling FLAGS
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"; SLKLDFLAGS=""; LIBDIRSUFFIX=""; CHOST="i486"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"; SLKLDFLAGS=""; LIBDIRSUFFIX=""; CHOST="i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"; SLKLDFLAGS="-L/usr/lib64"; LIBDIRSUFFIX="64"; CHOST="x86_64"
fi

# Create building directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT

# Decompress the source tarball
cd $TMP
tar xvf $CWD/blas.tgz

echo -e "\E[0;32m+-----------------------+\E[0;0m"
echo -e "\E[0;32m| Start SlackBuild BLAS |\E[0;0m"
echo -e "\E[0;32m+-----------------------+\E[0;0m"

# Adjust permissions and ownerships
cd BLAS
chmod -R u+w,go+r-w,a-s .
chown -R root:root .

# Building BLAS package
# Build the object files and the static library
make OPTS="$SLKCFLAGS -std=legacy" all
ranlib $PKGNAME\_LINUX.a
mkdir shared
( cd shared
  ar -x ../$PKGNAME\_LINUX.a
  gcc -fPIC -lgfortran -shared *.o -Wl,-soname,lib$PKGNAME.so.$SOMAJOR \
          -o lib$PKGNAME.so.$SOVERS
)


mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}
cp ${PKGNAME}_LINUX.a $PKG/usr/lib${LIBDIRSUFFIX}/libblas.a
cp shared/lib$PKGNAME.so.$SOVERS $PKG/usr/lib${LIBDIRSUFFIX}
( cd $PKG/usr/lib${LIBDIRSUFFIX}
  chmod 0755 *.so.*
  ln -s lib$PKGNAME.so.$SOVERS lib$PKGNAME.so.$SOMAJOR
  ln -s lib$PKGNAME.so.$SOMAJOR lib$PKGNAME.so
)



# Strip binaries and shared objects, if present
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)


#Add documentation files: readme, changelog and so on
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
chmod 644 $PKG/usr/doc/$PKGNAME-$VERSION/*
# Also add the slack-desk file and this slackbuild to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-desc
cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$PKGNAME.SlackBuild


# Find and print dependencies into slack-required file
cd $PKG
chown -R root:root $PKG
if [ -x /usr/bin/requiredbuilder ];then
requiredbuilder -y -v -s  $CWD $PKG
fi
# Create txz package
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}


# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi


#!/bin/sh

# Heavily based on the Slackware 14.0 SlackBuild
# Written by Andrea Sciucca ( gohanz at infinito.it )
#  Last build by Leonardo Totaro ( brainvision AT slacky DOT it )
#  (â†„) copyleft ## ENJOY SHARING YOUR KNOWLEDGE! ## http://www.slacky.eu

# Slackware build script for libisofs
# Official Site: http://libburnia-project.org


# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


# Exit on most errors
set -e

# Set variables
PKGNAME=libisofs
VERSION=${VERSION:-1.2.4}
BUILD=${BUILD:-1}
TAG=${TAG:-sl}
ARCH=${ARCH:-i486}
SOURCE="http://files.libburnia-project.org/releases/$PKGNAME-$VERSION.tar.gz"

CWD=$(pwd)
TMP=${TMP:-/tmp/buildpkgs/$PKGNAME}
PKG=$TMP/package-$PKGNAME
OUTPUT=${OUTPUT:-$CWD}

# Download the source tarball if still not present
if [ ! -e $CWD/$PKGNAME-$VERSION.tar.gz ];then
  wget $SOURCE
fi

# Set compiling FLAGS
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"; SLKLDFLAGS=""; LIBDIRSUFFIX=""; CHOST="i486"
elif [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"; SLKLDFLAGS=""; LIBDIRSUFFIX=""; CHOST="i586"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"; SLKLDFLAGS=""; LIBDIRSUFFIX=""; CHOST="i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"; SLKLDFLAGS="-L/usr/lib64"; LIBDIRSUFFIX="64"; CHOST="x86_64"
fi

# Prepare work's paths
rm -rf $TMP
mkdir -p $TMP $PKG $OUTPUT

# Decompress source tarball
cd $TMP
tar xvf $CWD/$PKGNAME-$VERSION.tar.gz
cd $PKGNAME-$VERSION

# Adjust ownerships and permissions
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# Compile with the following options
LDFLAGS="$SLKLDFLAGS" \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PKGNAME-$VERSION \
  --disable-static \
  --program-prefix= \
  --program-suffix= \
  --build=$CHOST-slackware-linux

# Build and install
make
make install DESTDIR=$PKG

# Add the basic documentation: README, ChangeLog files and so on
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION
cp -a \
  AUTHORS ChangeLog COPYING COPYRIGHT INSTALL README Roadmap NEWS TODO \
  $PKG/usr/doc/$PKGNAME-$VERSION

# Also add the software describing slack-desk file and this slackbuild
cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/$PKGNAME.SlackBuild
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/slack-desc
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

# Compress man pages if any
if [ -d $PKG/usr/man ]; then
    ( cd $PKG/usr/man
      find . -type f -exec gzip -9 {} \;
      for i in $( find . -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
    )
fi

# Strip binaries and shared objects, if present
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)

# Find dependencies and print them into the slack-required file
cd $PKG
chown -R root:root $PKG
if [ -x "$(which requiredbuilder 2>/dev/null)" ];then
  requiredbuilder -y -v -s $CWD $PKG
fi

# Finally build the package
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

# Cleanup your temp folder if this option is being used
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP
fi

# Print some funny text!
echo -e "\E[0;32m+------------------------------+\E[0;0m"
echo -e "\E[0;32m|      THAT'S ALL, FOLKS !     |\E[0;0m" 
echo -e "\E[0;32m+------------------------------+\E[0;0m"


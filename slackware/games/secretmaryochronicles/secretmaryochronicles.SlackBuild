#!/bin/sh
# Heavily based on the Slackware 14.0 SlackBuild
# http://www.secretmaryo.org
# Packager Andrea Sciucca ( gohanz at infinito.it)
# http://www.slacky.eu
#
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Required: CEGUI, FreeImage
#
# Exit on most errors
set -e 


# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=smc
TMP=${TMP:-/tmp/txz/$PKGNAME}
PKG=$TMP/package
#VERSION=${VERSION:-1.9}
VERSION=${VERSION:-`date +%Y%m%d`}
MUSICPACK=${MUSICPACK:-5.0}
ARCH=${ARCH:-i486}
JOBS=${JOBS:--j2}
BUILD=${BUILD:-1}
TAG=${TAG:-sl}

#SOURCE="http://garr.dl.sourceforge.net/sourceforge/smclone/$PKGNAME-$VERSION.tar.bz2"

# Download sorce tarball if still not present
#if [ ! -e $CWD/$PKGNAME-$VERSION.tar.bz2 ]; then
#wget -c $SOURCE
#fi

#SOURCE=http://surfnet.dl.sourceforge.net/sourceforge/smclone/SMC_Music_${MUSICPACK}'_'high.zip

#if [ ! -e $CWD/SMC_Music_${MUSICPACK}'_'high.zip ]; then
#wget -c $SOURCE
#fi


# Set compiling FLAGS
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"; SLKLDFLAGS=""; LIBDIRSUFFIX=""; CHOST="i486"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"; SLKLDFLAGS=""; LIBDIRSUFFIX=""; CHOST="i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"; SLKLDFLAGS="-L/usr/lib64"; LIBDIRSUFFIX="64"; CHOST="x86_64"
fi

# Create building directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT

# Decompress the source tarball
cd $TMP
#tar xvjf $CWD/$PKGNAME-$VERSION.tar.bz2
#git clone http://github.com/FluXy/SMC.git

echo -e "\E[0;32m+--------------------------------------------+\E[0;0m"
echo -e "\E[0;32m| Start SlackBuild   Secret Maryo Chronicles |\E[0;0m"
echo -e "\E[0;32m+--------------------------------------------+\E[0;0m"

# Adjust permissions and ownerships
#cd $PKGNAME-$VERSION
cd SMC/smc
chmod -R u+w,go+r-w,a-s .
chown -R root:root .

./autogen.sh
# Building Secret Maryo Chronicles package
LDFLAGS="$SLKLDFLAGS" \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure 	--prefix=/usr \
		--sysconfdir=/etc \
		--localstatedir=/var \
		--libdir=/usr/lib${LIBDIRSUFFIX} \
		--mandir=/usr/man \
		--program-prefix= \
		--program-suffix= \
		--build=$CHOST-slackware-linux
make $JOBS
make install DESTDIR=$PKG


# Installing extra music package 
#unzip -o $CWD/SMC_Music_${MUSICPACK}'_'high.zip
#mv -v data/music $PKG/usr/share/smc


# Installing icons and desktop file menu
mkdir -p ${PKG}/usr/share/applications

cat << EOF > $PKG/usr/share/applications/secretmaryochronicles.desktop
[Desktop Entry]
Name=Secret Maryo Chronicles
GenericName=A platform game
Comment=Secret Maryo Chronicles is an Open Source two-dimensional platform game.
Comment[it]=Secret Maryo Chronicles Ã¨ un clone Open Source del conosciuto SuperMario
Exec=smc
Icon=/usr/share/smc/icon/window_32.png
Terminal=false
Type=Application
Categories=Application;Game;
EOF

# Add documentation files: readme, changelog and so on
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
# Also add the slack-desk file and this slackbuild to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-desc
cat $CWD/secretmaryochronicles.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/secretmaryochronicles.SlackBuild


# Strip binaries and shared objects, if present
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)


# Building some post-install execution script 	
	echo "if [ -x /usr/bin/update-desktop-database ]; then
  /usr/bin/update-desktop-database &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh
	echo "if [ -x /usr/bin/gtk-update-icon-cache ]; then
  /usr/bin/gtk-update-icon-cache  -f -q /usr/share/icons/hicolor &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh







# Find and print dependencies into slack-required file
cd $PKG
chown -R root:root $PKG
if [ -x /usr/bin/requiredbuilder ];then
requiredbuilder -y -v -c -b -s  $CWD $PKG
fi
# Create txz package
/sbin/makepkg -l y -c n $OUTPUT/secretmaryochronicles-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}


# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi



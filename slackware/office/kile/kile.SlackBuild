#!/bin/sh

# Heavily based on the Slackware 14.0 SlackBuild
# Written by tom ( www.slacky.eu )
# Last build from proffi ( www.slacky.eu )

# Slackware build script for Kile
# Official Site: http://kile.sourceforge.net

# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AS IS AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Exit the script on errors:
set -e
trap 'echo "$0 FAILED at line ${LINENO}"' ERR

# Catch variables:
PKGNAME=kile
VERSION=2.1.3
BUILD=${BUILD:-1}
TAG=${TAG:-sl}
ARCH=${ARCH:-i486}
CWD=${CWD:-`pwd`}
TMP=${TMP:-/tmp/buildpkgs/$PKGNAME}
PKG=${PKG:-$TMP/package-$PKGNAME}
OUTPUT=${OUTPUT:-$CWD}
SOURCE="http://downloads.sourceforge.net/$PKGNAME/$PKGNAME-$VERSION.tar.bz2"

CHOST="i486"
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  SLKLDFLAGS=""
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  SLKLDFLAGS=""
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  SLKLDFLAGS=""
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  SLKLDFLAGS="-L/usr/lib64"
  LIBDIRSUFFIX="64"
  CHOST="x86_64"
fi

# Source file availability:
if [ ! -e $CWD/$PKGNAME-$VERSION.tar.bz2 ] ; then
  wget $SOURCE
fi

# Create working directories:
rm -rf $TMP
mkdir -p $TMP $PKG $OUTPUT

# Extract the sources:
cd $TMP
tar xvf $CWD/$PKGNAME-$VERSION.tar.bz2
cd $PKGNAME-$VERSION

chown -R root:root .
chmod -R u+w,go+r-w,a-s .

echo -e "\e[0;32m+--------------------------+\e[m"
echo -e "\e[0;32m| Starting Kile SlackBuild |\e[m"
echo -e "\e[0;32m+--------------------------+\e[m"

# Build:
mkdir -p build
( cd build
  cmake .. \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DMAN_INSTALL_DIR=/usr/man \
    -DSYSCONF_INSTALL_DIR=/etc \
    -DLIB_SUFFIX=$LIBDIRSUFFIX \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_SKIP_RPATH=ON
  make $MAKEFLAGS
  make install DESTDIR=$PKG $MAKEFLAGS

  mv $PKG/usr/share/doc $PKG/usr/doc
  mv $PKG/usr/doc/$PKGNAME $PKG/usr/doc/$PKGNAME-$VERSION
)

# Add documentation:
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION
cp -a \
  AUTHORS ChangeLog  CODE-FORMATTING-STYLE.txt COPYING* kile-remote-control.txt README* doc/TODO \
  $PKG/usr/doc/$PKGNAME-$VERSION
cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/$PKGNAME.SlackBuild
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/slack-desc

# Strip binaries:
cd $PKG
chown -R root:root $PKG

find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true

# Add slack-desc, doinst.sh and slack-required:
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

if [ -x "$(which requiredbuilder 2>/dev/null)" ];then
  requiredbuilder -y -v -s $CWD $PKG
fi

# Make the package:
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $TMP $PKG
fi

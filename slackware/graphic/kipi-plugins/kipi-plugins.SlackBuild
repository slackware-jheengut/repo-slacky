#!/bin/sh
# Heavily based on the Slackware 14.0 SlackBuild 
#
# Slackware build script for kipi-plugins (http://www.kipi-plugins.org)
#
# Copyright 2008,2009 Corrado Franco (http://conraid.net)
# Thanks to Frank Caraballo <fecaraballo{at}gmail{dot}com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Exit on most errors
set -e

# Set variables:
CWD=$(pwd)

PRGNAME=${PRGNAME:-kipi-plugins}
VERSION=${VERSION:-1.9.0}
ARCH=${ARCH:-i486}
BUILD=${BUILD:-5}
TAG=${TAG:-sl}
TMP=${TMP:-/tmp/pkg}
JOBS=${JOBS:--j2}
SOURCE="http://garr.dl.sourceforge.net/sourceforge/kipi/kipi-plugins-${VERSION}.tar.bz2"
PKG=$TMP/package-$PRGNAME
DOCS="$PKG/usr/doc/$PRGNAME-$VERSION"

# Insert document files in this variable
DOCFILES="AUTHORS COPYING* ChangeLog INSTALL NEWS README TODO"

# Set compiling FLAGS
case "$ARCH" in
    i486)
	SLKCFLAGS="-O2 -march=i486 -mtune=i686"; CHOST="i486"
	SLKLDFLAGS=""; LIBDIRSUFFIX=""
        ;;
    i686)
	SLKCFLAGS="-O2 -march=i686 -pipe -fomit-frame-pointer"; CHOST="i486"
	SLKLDFLAGS=""; LIBDIRSUFFIX=""
        ;;
    x86_64)
	SLKCFLAGS="-O2 -fPIC -pipe -fomit-frame-pointer"; CHOST="x86_64"
	SLKLDFLAGS=""; LIBDIRSUFFIX="64"
        ;;
esac

# Download source, if not exist
if ! [ -e $(basename $SOURCE) ]; then
    wget $SOURCE
fi

# Extract source and prepare:
rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf $PRGNAME-$VERSION
tar xjvf $CWD/$PRGNAME-$VERSION.tar.bz2
cd $PRGNAME-$VERSION


# Fix for gcc-4.7.x
patch -p1 < $CWD/kipi-plugins-1.9.0-gcc47.patch
# Make sure ownerships and permissions are sane:
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# Configure
cmake . \
-DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
-DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
-DCMAKE_LD_FLAGS:STRING="$SLKLDFLAGS" \
-DCMAKE_INSTALL_PREFIX=/usr \
-DMAN_INSTALL_DIR=/usr/man \
-DSYSCONF_INSTALL_DIR=/etc/kde \
-DLIB_SUFFIX=${LIBDIRSUFFIX} \
-DCMAKE_BUILD_TYPE=none

# Build and install:
echo -e "\E[0;32mPress any key to build the package!\E[0;0m"
read
make $JOBS
make install/strip DESTDIR=${PKG}

# Add a documentation directory:
mkdir -p ${DOCS}
for i in ${DOCFILES}; do
    if [ -e ${i} ]; then
        if ! [ -L ${i} ]; then
	    cp -a ${i} ${DOCS}
	else
	    cp -LRp ${i} ${DOCS}
        fi
    fi;
done

# Add a slackbuild script:
cat $CWD/$PRGNAME.SlackBuild > $DOCS/$PRGNAME.SlackBuild

# Add slack-desc
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

# Add a doinst.sh, if any
if [ -f $CWD/doinst.sh.gz ]; then
    zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh
elif [ -f $CWD/doinst.sh ]; then
    cat $CWD/doinst.sh > $PKG/install/doinst.sh
fi

# Create slack-required file:
if [ -x /usr/bin/requiredbuilder ]; then
ADD=$(ls /var/log/packages/ | sed -nr -e 's/^(enblend-enfuse)-([^-]+-[^-]+-[^-]+)/\1 >= \2,/p' \
-e 's/^(hugin)-([^-]+-[^-]+-[^-]+)$/\1 >= \2/p') \
requiredbuilder -v -y -s $CWD $PKG
fi

# Create package:
cd $PKG
/sbin/makepkg -l y -c n $CWD/$PRGNAME-$VERSION-$ARCH-${BUILD}${TAG}.txz

# Clean file, if option is set:
if [ "$1" = "--cleanup" ]; then
  rm -rf ${TMP}/${PRGNAME}-${VERSION}
  rm -rf $PKG
fi

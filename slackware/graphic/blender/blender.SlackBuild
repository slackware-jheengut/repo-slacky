#!/bin/sh
# Heavily based on the Slackware 14.0 SlackBuild
# http://www.blender.org
# Packager Andrea Sciucca ( gohanz at infinito.it)
# Thanks to Robby Workman  Northport, AL, USA
# Thanks to Giorgio Peron <giorgio.peron@gmail.com> 
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# Required: jack-audio-connection-kit
#
# Exit on most errors
set -e

# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=/blender
TMP=${TMP:-/tmp/txz/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-2.66}
ARCH=${ARCH:-i686} #i686 or x86_64
BUILD=${BUILD:-3}
TAG=${TAG:-sl}

SOURCE="http://download.blender.org/release/Blender2.66/blender-2.66-linux-glibc211-i686.tar.bz2"

# Download sorce tarball if still not present
if [ ! -e $CWD/blender-$VERSION-linux-glibc211-$ARCH.tar.bz2 ]; then
wget -c $SOURCE
fi


# Set compiling FLAGS
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"; SLKLDFLAGS=""; LIBDIRSUFFIX=""; CHOST="i486"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"; SLKLDFLAGS=""; LIBDIRSUFFIX=""; CHOST="i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"; SLKLDFLAGS="-L/usr/lib64"; LIBDIRSUFFIX="64"; CHOST="x86_64"
fi

# Create building directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT

# Decompress the source tarball
cd $TMP
tar xvjf $CWD/blender-$VERSION-linux-glibc211-$ARCH.tar.bz2

echo -e "\E[0;32m+--------------------------+\E[0;0m"
echo -e "\E[0;32m| Start SlackBuild Blender |\E[0;0m"
echo -e "\E[0;32m+--------------------------+\E[0;0m"

# Adjust permissions and ownerships
cd blender-$VERSION-linux-glibc211-$ARCH
chmod -R u+w,go+r-w,a-s .
chown -R root:root .


#Add documentation files: readme, changelog and so on
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
mv  GPL-license.txt copyright.txt Python-license.txt readme.html $PKG/usr/doc/$PKGNAME-$VERSION
chmod 644 $PKG/usr/doc/$PKGNAME-$VERSION/*


# Building Blender package
mkdir -p $PKG/usr/bin
cat << EOF > $PKG/usr/bin/blender
#!/bin/bash
cd /opt/blender
exec /opt/blender/blender
EOF

chmod 755 $PKG/usr/bin/*

mkdir -p $PKG/opt/blender
mv * $PKG/opt/blender
# We'll remove the libGL* shared libaries that are shipped with blender (and
# instead use the ones that are shipped with Slackware's Xorg)
rm -f $PKG/opt/blender/lib/libGL*

# Add profile scripts to append to PATH
mkdir -p $PKG/etc/profile.d
cp $CWD/profile.d/* $PKG/etc/profile.d/
chmod 0755 $PKG/etc/profile.d/*


# Put symlinks to icons in the standard places
for size in 16x16 22x22 24x24 32x32 48x48 ; do
  mkdir -p $PKG/usr/share/icons/hicolor/$size/apps
  ln -s /opt/blender/icons/$size/apps/blender.png \
        $PKG/usr/share/icons/hicolor/$size/apps/
done
mkdir -p $PKG/usr/share/icons/hicolor/scalable/apps
  ln -s /opt/blender/icons/scalable/apps/blender.svg \
        $PKG/usr/share/icons/hicolor/scalable/apps/

# Installing desktop menu file
install -m 0644 -p -D $CWD/blender.desktop $PKG/usr/share/applications/blender.desktop


# Strip binaries and shared objects, if present
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)



# Also add the slack-desk file and this slackbuild to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-desc
cat $CWD/profile.d/blender.csh > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/blender.csh
cat $CWD/profile.d/blender.sh > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/blender.sh
cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$PKGNAME.SlackBuild


# Building some post-install execution script 	
	echo "if [ -x /usr/bin/update-mime-database ]; then
  /usr/bin/update-mime-database /usr/share/mime &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh
	echo "if [ -x /usr/bin/update-desktop-database ]; then
  /usr/bin/update-desktop-database &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh
	echo "if [ -x /usr/bin/gtk-update-icon-cache ]; then
  /usr/bin/gtk-update-icon-cache  -f -q /usr/share/icons/hicolor &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh



# Find and print dependencies into slack-required file
cd $PKG
chown -R root:root $PKG
if [ -x /usr/bin/requiredbuilder ];then
requiredbuilder -y -v -s  $CWD $PKG
fi
# Create txz package
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}


# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi

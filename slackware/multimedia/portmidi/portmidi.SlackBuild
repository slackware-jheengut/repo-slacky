#!/bin/sh

# Heavily based on the Slackware 14.0 SlackBuild

# Slackware build script for Portmidi
# Official site: http://portmedia.sourceforge.net/

# Written Andrea Sciucca ( gohanz at infinito.it)
# http://www.slacky.eu
# Thanks to  David Woodfall <dave@dawoodfall.net>


# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Required: jdk
#
# Exit on most errors
set -e


# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=portmidi
TMP=${TMP:-/tmp/txz/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-217}
ARCH=${ARCH:-i486}
BUILD=${BUILD:-7}
TAG=${TAG:-sl}

# Download sorce tarball if still not present
SOURCE="http://downloads.sourceforge.net/project/portmedia/portmidi/217/$PKGNAME-src-$VERSION.zip"

if [ ! -e $CWD/$PKGNAME-src-$VERSION.zip ]; then
 wget $SOURCE
fi


# Set compiling FLAGS
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"; SLKLDFLAGS=""; LIBDIRSUFFIX=""; CHOST="i486"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"; SLKLDFLAGS=""; LIBDIRSUFFIX=""; CHOST="i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"; SLKLDFLAGS="-L/usr/lib64"; LIBDIRSUFFIX="64"; CHOST="x86_64"
fi

# Create building directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT


# Decompress the source tarball
cd $TMP
unzip -o $CWD/$PKGNAME-src-$VERSION.zip

echo -e "\E[0;32m+--------------------------+\E[0;0m"
echo -e "\E[0;32m| Start SlackBuild Portmidi |\E[0;0m"
echo -e "\E[0;32m+--------------------------+\E[0;0m"

# Adjust permissions and ownerships
cd $PKGNAME
chown -R root:root .
chmod -R u+w,go+r-w,a-s .


# cmake install dir & 64 bit fixes
patch --verbose -p1 -i $CWD/portmidi-cmake.patch

# Build Portmidi package
cmake . \
   -DCMAKE_C_FLAGS="$SLKCFLAGS" \
  -DCMAKE_CXX_FLAGS="$SLKCFLAGS" \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DLIB_SUFFIX="$LIBDIRSUFFIX" \
  -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=$PKG/usr/bin \
  -DJAVA_AWT_INCLUDE_PATH="/usr/lib$LIBDIRSUFFIX/java/include" \
  -DJAVA_INCLUDE_PATH="/usr/lib$LIBDIRSUFFIX/java/include" \
  -DJAVA_INCLUDE_PATH2="/usr/lib$LIBDIRSUFFIX/java/include/linux" \
  -DCMAKE_CACHEFILE_DIR=$(pwd) \
  -DJAVA_JVM_LIBRARY="/usr/lib$LIBDIRSUFFIX/libjvm.so"
  
# some wrong paths expose with openjdk, fix them
# https://bugs.archlinux.org/task/29214
sed -i "s|pm_java/pm_java|pm_java|" pm_java/CMakeFiles/pmdefaults_target.dir/build.make


   make all \
    CFLAGS="-fPIC" \
    PMFLAGS="-DNEWBUFFER" \
    

make install DESTDIR=$PKG  



cd $PKG/usr/lib$LIBDIRSUFFIX
  rm -f libportmidi_s.a
  ln -s libportmidi.so libporttime.so
cd -



# I think this may cause problems unless it's renamed
mv $PKG/usr/bin/test $PKG/usr/bin/portmiditest

install -m 0644 -D pm_common/pmutil.h $PKG/usr/include
install -m 0644 -D $CWD/pmdefaults.desktop $PKG/usr/share/applications/pmdefaults.desktop

install -m 0644 -D pm_java/pmdefaults/pmdefaults-icon.png \
    $PKG/usr/share/icons/hicolor/128x128/apps/pmdefaults-icon.png



# Strip binaries and shared objects, if present
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)


#Add documentation files: readme, changelog and so on
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
cp -a CHANGELOG.txt README.txt  $PKG/usr/doc/$PKGNAME-$VERSION
chmod 644 $PKG/usr/doc/$PKGNAME-$VERSION/*


# Also add the slack-desk file and this slackbuild to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-desc
cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$PKGNAME.SlackBuild



# Building some post-install execution script 	
	echo "if [ -x /usr/bin/update-desktop-database ]; then
  /usr/bin/update-desktop-database &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh
	echo "if [ -x /usr/bin/gtk-update-icon-cache ]; then
  /usr/bin/gtk-update-icon-cache  -f -q /usr/share/icons/hicolor &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh





# Find and print dependencies into slack-required file
cd $PKG
chown -R root:root $PKG
if [ -x /usr/bin/requiredbuilder ];then
requiredbuilder -y -v -s  $CWD $PKG
fi
# Create txz package
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}


# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi



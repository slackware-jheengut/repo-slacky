#!/bin/sh
# Copyright 2008 Loris Vincenzi (http://www.slacky.eu)
# All rights reserved.
#
# Heavily based on the Slackware 14.0 SlackBuild
#
# http://fixounet.free.fr/avidemux/
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Required: aften, dcaenc, faac, faad2, jack-audio-connection-kit, lame, libdca, libva
# Required: libvdpau, libvpx, opencore-amr, twolame,  x264, xvidcore
#
# Exit on most errors
set -e



# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=avidemux
TMP=${TMP:-/tmp/txz/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-2.6.0}
ARCH=${ARCH:-i486}
JOBS=${JOBS:--j1}
BUILD=${BUILD:-3}
TAG=${TAG:-sl}

SOURCE=http://garr.dl.sourceforge.net/sourceforge/avidemux/$PKGNAME'_'$VERSION.tar.gz

# Download sorce tarball if still not present
if [ ! -e $CWD/$PKGNAME'_'$VERSION.tar.gz ]; then
wget -c $SOURCE
fi

# Set compiling FLAGS
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"; SLKLDFLAGS=""; LIBDIRSUFFIX=""; CHOST="i486"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"; SLKLDFLAGS=""; LIBDIRSUFFIX=""; CHOST="i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"; SLKLDFLAGS="-L/usr/lib64"; LIBDIRSUFFIX="64"; CHOST="x86_64"
fi

# Create building directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT

# Decompress the source tarball
cd $TMP
tar xvzf $CWD/$PKGNAME'_'$VERSION.tar.gz

echo -e "\E[0;32m+-------------------------------+\E[0;0m"
echo -e "\E[0;32m| Start SlackBuild Avidemux QT4 |\E[0;0m"
echo -e "\E[0;32m+-------------------------------+\E[0;0m"

# Adjust permissions and ownerships
cd $PKGNAME'_'$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# Building Avidemux QT4  package
bash ./bootStrap.bash --with-core --without-gtk --without-cli --with-qt4 --with-plugins
( cd install
cp -R * $PKG )

# Add documentation files: readme, changelog and so on
mkdir -p $PKG/usr/doc/$PKGNAME-qt4-$VERSION/SlackBuild
cp -a AUTHORS  COPYING  README *.txt  $PKG/usr/doc/$PKGNAME-qt4-$VERSION
chmod 644 $PKG/usr/doc/$PKGNAME-qt4-$VERSION/*


# Installing manpage
install -m 644 -p -D man/avidemux.1  $PKG/usr/man/man1/avidemux.1

# Installing desktop file menu and icons
mkdir -p $PKG/usr/share/{applications,pixmaps}
cat avidemux_icon.png > $PKG/usr/share/pixmaps/avidemux.png

cat << EOF > $PKG/usr/share/applications/avidemux2-qt4.desktop
[Desktop Entry]
Name=Avidemux3-Qt4
GenericName=Video Editor Qt4
GenericName[ca]=Editor de vÃ­deo Qt4
GenericName[it]=Video editor Qt4
Comment=Qt4 multi-format, cross-platform video editor
Comment[ca]=Per editar els vostres vÃ­deos
Comment[it]=Tool grafico Qt4  per la modifica dei video in sistemi GNU/Linux
Exec=avidemux3_qt4
Icon=avidemux
MimeType=video/mpeg;video/quicktime;video/x-msvideo;video/x-anim;audio/x-mp3;audio/x-mp2;
Terminal=0
Type=Application
Encoding=UTF-8
Categories=Application;AudioVideo;
EOF



# Strip binaries and shared objects, if present
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)






# Also add the slack-desk file and this slackbuild to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-qt4-$VERSION/SlackBuild/slack-desc
cat $CWD/$PKGNAME-qt4.SlackBuild > $PKG/usr/doc/$PKGNAME-qt4-$VERSION/SlackBuild/$PKGNAME-qt4.SlackBuild



# Compress the man pages if present
if [ -d $PKG/usr/man ]; then
    ( cd $PKG/usr/man
      find . -type f -exec gzip -9 {} \;
      for i in $( find . -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
    )
fi


# Building some post-install execution script 	
	echo "if [ -x /usr/bin/update-mime-database ]; then
  /usr/bin/update-mime-database /usr/share/mime &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh
	echo "if [ -x /usr/bin/update-desktop-database ]; then
  /usr/bin/update-desktop-database &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh
	echo "if [ -x /usr/bin/gtk-update-icon-cache ]; then
  /usr/bin/gtk-update-icon-cache  -f -q /usr/share/icons/hicolor &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh


# Compress the man pages if present
if [ -d $PKG/usr/man ]; then
    ( cd $PKG/usr/man
      find . -type f -exec gzip -9 {} \;
      for i in $( find . -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
    )
fi


# Find and print dependencies into slack-required file
cd $PKG
chown -R root:root $PKG
if [ -x /usr/bin/requiredbuilder ];then
requiredbuilder -y -v -s  $CWD $PKG
fi
# Create txz package
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-qt4-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi


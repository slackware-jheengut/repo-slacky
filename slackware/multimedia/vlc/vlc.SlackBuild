#!/bin/sh
# Heavily based on the Slackware 14.0 SlackBuild
# http://www.videolan.org
# Packager  Andrea Sciucca ( gohanz at infinito.it)
# http://www.slacky.eu
#
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Required: a52dec, celt, dirac, enca, faac, faad2, ffmpeg, fluidsynth, game-music-emu, goom, jack-audio-connection-kit, lame, libaacplus, libass, libavc1394 
# Required: libbluray, libcrystalhd, libdca, libdvbpsi5, libdvdcss, libdvdnav, libebml, libgsm, libkate, libmatroska, libminizip
# Required: libmodplug, libmpcdec, libmpeg2, libshout, libtar, libtiger, libupnp, libva, lirc 
# Required: lua, opencor-amr, opencv, openjpeg, orc, projectm, rtmpdump, schroendinger, speex, twolame, vcdimager, x264, xosd, xvidcore, zvbi
#
# Statically linked: live555
#
# Warning remove previous VLC versions before compiling!
#
# Exit on most errors
set -e 



# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=vlc
TMP=${TMP:-/tmp/txz/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-2.0.4}
ARCH=${ARCH:-i486}
JOBS=${JOBS:--j2}
BUILD=${BUILD:-1}
TAG=${TAG:-sl}

SOURCE="http://download.videolan.org/pub/videolan/vlc/$VERSION/$PKGNAME-$VERSION.tar.xz"

# Download sorce tarball if still not present
if [ ! -e $CWD/$PKGNAME-$VERSION.tar.xz ]; then
wget -c $SOURCE
fi


# Set compiling FLAGS
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"; SLKLDFLAGS=""; LIBDIRSUFFIX=""; CHOST="i486"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"; SLKLDFLAGS=""; LIBDIRSUFFIX=""; CHOST="i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"; SLKLDFLAGS="-L/usr/lib64"; LIBDIRSUFFIX="64"; CHOST="x86_64"
fi

# Create building directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT

# Decompress the source tarball
cd $TMP
tar xvf $CWD/$PKGNAME-$VERSION.tar.xz

echo -e "\E[0;32m+----------------------+\E[0;0m"
echo -e "\E[0;32m| Start SlackBuild VLC |\E[0;0m"
echo -e "\E[0;32m+----------------------+\E[0;0m"

# Adjust permissions and ownerships
cd $PKGNAME-$VERSION
# Fix compilation of 32-bit vlc-2.0.4:
patch -p1 < $CWD/vlc-2.0.4_dmo.patch
chmod -R u+w,go+r-w,a-s .
chown -R root:root .

# Building VLC package
# Option to pass at the compilation process
LDFLAGS="$SLKLDFLAGS" \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure --prefix=/usr \
--prefix=/usr \
--sysconfdir=/etc \
--localstatedir=/var \
--libdir=/usr/lib${LIBDIRSUFFIX} \
--mandir=/usr/man \
--docdir=/usr/doc/$PKGNAME-$VERSION \
--enable-optimize-memory=no \
--enable-run-as-root \
--enable-sout \
--enable-shout \
--enable-live555 \
--enable-dv \
--enable-dc1394 \
--enable-dvdread \
--enable-dvdnav \
--enable-sftp \
--enable-dvbpsi \
--enable-v4l2 \
--enable-pvr \
--disable-gnomevfs \
--disable-portaudio \
--enable-vcdx \
--enable-shine \
--enable-omxil \
--enable-iomx \
--enable-twolame \
--enable-faad \
--enable-real \
--enable-realrtsp \
--enable-flac \
--enable-tremor \
--enable-dirac \
--enable-theora \
--enable-libass \
--enable-svg \
--enable-aa \
--enable-caca \
--enable-jack \
--disable-pulse \
--enable-skins2 \
--enable-xosd \
--enable-goom \
--enable-lirc \
--enable-loader \
--program-prefix= \
--program-suffix= \
--build=$CHOST-slackware-linux  
echo -e "\E[0;32mPress any key to build the package!\E[0;0m"
read
make $JOBS
make install DESTDIR=$PKG


# Strip binaries and shared objects, if present
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)



#Add documentation files: readme, changelog and so on
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
cp -a ABOUT-NLS AUTHORS COPYING* ChangeLog INSTALL NEWS README THANKS \
$PKG/usr/doc/$PKGNAME-$VERSION
chmod 644 $PKG/usr/doc/$PKGNAME-$VERSION/*



# Also add the slack-desk file and this slackbuild to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-desc
cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$PKGNAME.SlackBuild


# Building some post-install execution script 	
echo "if [ -x /usr/bin/update-mime-database ]; then
  /usr/bin/update-mime-database /usr/share/mime &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh
echo "if [ -x /usr/bin/update-desktop-database ]; then
  /usr/bin/update-desktop-database 1> /dev/null &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo  >> $PKG/install/doinst.sh
	echo "if [ -x /usr/bin/gtk-update-icon-cache ]; then
  /usr/bin/gtk-update-icon-cache  -f -q /usr/share/icons/hicolor &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo  >> $PKG/install/doinst.sh



# Compress the man pages if present
if [ -d $PKG/usr/man ]; then
    ( cd $PKG/usr/man
      find . -type f -exec gzip -9 {} \;
      for i in $( find . -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
    )
fi




# Find and print dependencies into slack-required file
cd $PKG
chown -R root:root $PKG
if [ -x /usr/bin/requiredbuilder ];then
ADD=$(ls /var/log/packages/ | sed -ne 's/\(libdvdcss\)-\([^-]\+-[^-]\+-[^-]\+\)/\1 >= \2/p') \
requiredbuilder -y -v -b -s  $CWD $PKG
fi
# Create txz package
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}


# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi




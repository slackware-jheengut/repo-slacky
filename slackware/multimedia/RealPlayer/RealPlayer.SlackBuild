#!/bin/sh
 
# Heavily based on the Slackware 14.0 SlackBuild
# Written by Loris Vincenzi (info@slacky.it)
# Last build from Loris Vincenzi (info@slacky.it)
# 
# Slackware build script for RealPlayer
# Official Site: http://www.real.com/linux
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=RealPlayer
TMP=${TMP:-/tmp/txz/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-11.0.2.2315}
ARCH=${ARCH:-i386}
BUILD=${BUILD:-2}
TAG=${TAG:-sl}

# Download sorce tarball if still not present
SOURCE="http://client-software.real.com/free/unix/RealPlayer11GOLD.rpm"

if [ ! -e $CWD/RealPlayer11GOLD.rpm ]; then
 wget $SOURCE
fi


# Create building directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT

# Decompress the source tarball
cd $TMP
rpm2cpio $CWD/RealPlayer11GOLD.rpm | cpio -i --make-directories

echo -e "\E[0;32m+-----------------------------+\E[0;0m"
echo -e "\E[0;32m| Start SlackBuild RealPlayer |\E[0;0m"
echo -e "\E[0;32m+-----------------------------+\E[0;0m"

# Building RealPlayer  package
mkdir -p $PKG/opt
cp -a -r $TMP/opt/* $PKG/opt


# Installing binaries on path
mkdir -p $PKG/usr/bin
( cd $PKG/usr/bin
  ln -sf /opt/real/RealPlayer/realplay .
  chmod 755 $PKG/usr/bin/*
)



# Installing mozilla plugins
install -D -m 0755 ${TMP}/opt/real/RealPlayer/mozilla/nphelix.xpt ${PKG}/usr/lib/mozilla/plugins/nphelix.xpt
install -D -m 0755 ${TMP}/opt/real/RealPlayer/mozilla/nphelix.so  ${PKG}/usr/lib/mozilla/plugins/nphelix.so


# Installing icons
  for res in 16 192 32 48; do
    install -d ${PKG}/usr/share/icons/hicolor/${res}x${res}/apps
    cp ${PKG}/opt/real/RealPlayer/share/icons/realplay_${res}x${res}.png \
       ${PKG}/usr/share/icons/hicolor/${res}x${res}/apps/realplay.png
  done
 install -d ${PKG}/usr/share/icons/hicolor/{48x48,192x192}/mimetypes
  for mime in generic ogg ram rpm smil; do
    ln -s /opt/real/RealPlayer/share/icons/mime-application-${mime}_48x48.png \
        ${PKG}/usr/share/icons/hicolor/48x48/mimetypes/realplay-application-${mime}.png
    ln -s /opt/real/RealPlayer/share/icons/mime-application-${mime}_192x192.png \
        ${PKG}/usr/share/icons/hicolor/192x192/mimetypes/realplay-application-${mime}.png
  done
for mime in aiff au generic ogg wav; do
    ln -s /opt/real/RealPlayer/share/icons/mime-audio-${mime}_48x48.png \
        ${PKG}/usr/share/icons/hicolor/48x48/mimetypes/realplay-audio-${mime}.png
    ln -s /opt/real/RealPlayer/share/icons/mime-audio-${mime}_192x192.png \
        ${PKG}/usr/share/icons/hicolor/192x192/mimetypes/realplay-audio-${mime}.png
  done
  ln -s /opt/real/RealPlayer/share/icons/mime-text-realtext_48x48.png \
        ${PKG}/usr/share/icons/hicolor/48x48/mimetypes/realplay-text-realtext.png
  ln -s /opt/real/RealPlayer/share/icons/mime-text-realtext_192x192.png \
        ${PKG}/usr/share/icons/hicolor/192x192/mimetypes/realplay-text-realtext.png
  for mime in generic ogg; do
    ln -s /opt/real/RealPlayer/share/icons/mime-video-${mime}_48x48.png \
        ${PKG}/usr/share/icons/hicolor/48x48/mimetypes/realplay-video-${mime}.png
    ln -s /opt/real/RealPlayer/share/icons/mime-video-${mime}_192x192.png \
        ${PKG}/usr/share/icons/hicolor/192x192/mimetypes/realplay-video-${mime}.png
  done

# Setting up locales
  for locale in de es fr hi it ja ko pl pt_BR zh_CN zh_TW; do
    install -d ${PKG}/usr/share/locale/${locale}/LC_MESSAGES
    ln -s /opt/real/RealPlayer/share/locale/${locale}/player.mo \
        ${PKG}/usr/share/locale/${locale}/LC_MESSAGES/realplay.mo
    ln -s /opt/real/RealPlayer/share/locale/${locale}/widget.mo \
        ${PKG}/usr/share/locale/${locale}/LC_MESSAGES/widget.mo
  done

# Installing pixmap, desktop file, etc.....
  install -d ${PKG}/usr/share/pixmaps
  ln -s /opt/real/RealPlayer/share/realplay.png ${PKG}/usr/share/pixmaps/realplay.png
  install -D -m 0644 ${PKG}/opt/real/RealPlayer/share/realplay.applications \
                   ${PKG}/usr/share/application-registry/realplay.applications
  install -D -m 0644 ${PKG}/opt/real/RealPlayer/share/realplay.desktop \
                   ${PKG}/usr/share/applications/realplay.desktop
  install -D -m 0644 ${PKG}/opt/real/RealPlayer/share/realplay.keys \
                   ${PKG}/usr/share/mime-info/realplay.keys
  install -D -m 0644 ${PKG}/opt/real/RealPlayer/share/realplay.mime \
                   ${PKG}/usr/share/mime-info/realplay.mime

# installing license
  install -D -m 0644 ${PKG}/opt/real/RealPlayer/LICENSE ${PKG}/usr/share/licenses/${PKGNAME}/LICENSE


# Strip binaries and shared objects, if present
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)


#Add documentation files: readme, changelog and so on
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
# Also add the slack-desk file and this slackbuild to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-desc
cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$PKGNAME.SlackBuild


# Building some post-install execution script 	
echo "if [ -x /usr/bin/update-mime-database ]; then
  /usr/bin/update-mime-database /usr/share/mime &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh
echo "if [ -x /usr/bin/update-desktop-database ]; then
  /usr/bin/update-desktop-database 1> /dev/null &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo  >> $PKG/install/doinst.sh
	echo "if [ -x /usr/bin/gtk-update-icon-cache ]; then
  /usr/bin/gtk-update-icon-cache  -f -q /usr/share/icons/hicolor &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo  >> $PKG/install/doinst.sh


# Find and print dependencies into slack-required file
cd $PKG
chown -R root:root $PKG
# Create txz package
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}


# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi





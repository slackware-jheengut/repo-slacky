#!/bin/sh
# Heavily based on the Slackware 14.0 SlackBuild
# http://www.dropbox.com/
# Packager Andrea Sciucca Gohanz ( gohanz at infinito.it)
# Thanks to Murat D. Kadirov <banderols@gmail.com>
# http://www.slacky.eu
#
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# Exit on most errors
set -e



# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=dropbox
TMP=${TMP:-/tmp/txz/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-1.2.49} 
ARCH=${ARCH:-i686}  # i686 or x86_64
BUILD=${BUILD:-3}
TAG=${TAG:-sl}

# Just in case:
case "$ARCH" in
  i?86) TARBALLARCH="x86" ; LIBDIRSUFFIX=""  ;;
  x86_64) TARBALLARCH="x86_64" ; LIBDIRSUFFIX="64" ;;
esac


# Download sorce tarball if still not present
SOURCE="http://dl-web.dropbox.com/u/17/$PKGNAME-lnx.$TARBALLARCH-$VERSION.tar.gz"

if [ ! -e $CWD/$PKGNAME-lnx.$TARBALLARCH-$VERSION.tar.gz ]; then
 wget $SOURCE
fi

# Create building directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT

# Decompress the source tarball
cd $TMP
tar xvzf $CWD/$PKGNAME-lnx.$TARBALLARCH-$VERSION.tar.gz

echo -e "\E[0;32m+--------------------------+\E[0;0m"
echo -e "\E[0;32m| Start SlackBuild Dropbox |\E[0;0m"
echo -e "\E[0;32m+--------------------------+\E[0;0m"

# Adjust permissions and ownerships
cd .$PKGNAME-dist
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# Building Dropbox package
mkdir -p $PKG/usr/bin
cat << EOF > $PKG/usr/bin/dropbox
#!/bin/bash
cd /opt/dropbox/
exec /opt/dropbox/dropbox
EOF

chmod 755 $PKG/usr/bin/*


mkdir $PKG/opt
mkdir -p $PKG/usr/bin
cp -R ../.$PKGNAME-dist $PKG/opt/dropbox
rm $PKG/opt/dropbox/libstdc++.so.6
install -m 0644 -p -D $CWD/dropbox.desktop $PKG/usr/share/applications/dropbox.desktop
install -m 0644 -p -D $CWD/dropbox.png     $PKG/usr/share/pixmaps/dropbox.png



# Add documentation files: readme, changelog and so on
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
chmod 644 $PKG/usr/doc/$PKGNAME-$VERSION/*


# Also add the slack-desk file and this slackbuild to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-desc
cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$PKGNAME.SlackBuild


# Building some post-install execution script 	
	echo "if [ -x /usr/bin/update-desktop-database ]; then
  /usr/bin/update-desktop-database 1> /dev/null 2> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh
	echo "if [ -x /usr/bin/gtk-update-icon-cache ]; then
  /usr/bin/gtk-update-icon-cache  -f -q /usr/share/icons/hicolor 1> /dev/null 2> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh




# Find and print dependencies into slack-required file
cd $PKG
chown -R root:root $PKG
if [ -x /usr/bin/requiredbuilder ];then
requiredbuilder -y -v -s  $CWD $PKG
fi
# Create txz package
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}


# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi


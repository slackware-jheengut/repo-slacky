#!/bin/sh
 
# Heavily based on the Slackware 14.0 SlackBuild
# Written by Loris Vincenzi (info@slacky.it)
# Last build from Loris Vincenzi (info@slacky.it)
# 
# Slackware build script for snort
# Official Site: http://www.snort.org
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Required: daq, libdnet 

set -e 

CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=snort
TMP=${TMP:-/tmp/txz/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-2.9.4}
ARCH=${ARCH:-i486}
JOBS=${JOBS:--j2}
BUILD=${BUILD:-1}
TAG=${TAG:-sl}

SOURCE="http://www.snort.org/dl/snort-current/$PKGNAME-$VERSION.tar.gz"

if [ ! -e $PKGNAME-$VERSION.tar.gz ]; then
wget -c $SOURCE
fi

CHOST="i486"
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  CHOST="x86_64"
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT

cd $TMP
tar xvzf $CWD/$PKGNAME-$VERSION.tar.gz

cd $PKGNAME-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# The Makefiles do not respect the --libdir setting, which causes the libs to
#  go to /usr/lib/ on Slackware64. We'll "teach them" how to do it right :)
for mf in $( find src/ -name Makefile.in ) ; do
  sed -i "s|\${exec_prefix}/lib/snort_dynamic|@libdir@/snort_dynamic|g" $mf
done

# Similar problem with the --docdir in /doc/Makefile.in ...
sed -i "s|\${datadir}/doc/\${PACKAGE}|@docdir@|g" doc/Makefile.in

# Building Snort package
LDFLAGS="$SLKLDFLAGS" \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
--prefix=/usr \
--libdir=/usr/lib${LIBDIRSUFFIX} \
--sysconfdir=/etc \
--mandir=/usr/man \
--localstatedir=/var \
--docdir=/usr/doc/$PKGNAME-$VERSION \
--enable-pthread \
--enable-linux-smp-stats \
--enable-zlib \
--build=$CHOST-slackware-linux
echo -e "\E[0;32mPress any key to build the package!\E[0;0m"
read
make $JOBS
make install DESTDIR=$PKG

# Strip binaries and shared objects, if present
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)

# Set up a sane config directory - snort won't do this on its own
mkdir -p $PKG/etc/$PKGNAME
# Fix paths for libraries in snort.conf, also 64-bits and rules paths...
#  also set "unified2" as standard output, without special options
sed -e "s|usr/local/lib|usr/lib${LIBDIRSUFFIX}|g" \
    -e "s|PATH ../|PATH |g" \
    -e "/^# output unified2*/aoutput unified2: filename snort.log, limit 128" \
    etc/snort.conf > $PKG/etc/snort/snort.conf.new
cat etc/threshold.conf > $PKG/etc/snort/threshold.conf.new
cat etc/reference.config > $PKG/etc/snort/reference.config.new
cat etc/classification.config > $PKG/etc/snort/classification.config.new
cat etc/attribute_table.dtd > $PKG/etc/snort/attribute_table.dtd.new
cat etc/gen-msg.map > $PKG/etc/snort/gen-msg.map.new
# sid-msg.map is not included in the source tarball, but it is in the
#  snort-rules package. We'll just skip it for now, it might come back in
#  some release...
#cat etc/sid-msg.map > $PKG/etc/snort/sid-msg.map.new
cat etc/unicode.map > $PKG/etc/snort/unicode.map.new

# Create default, empty directory for rules
mkdir -p $PKG/etc/snort/rules
mkdir -p $PKG/etc/snort/preproc_rules

# Include the rc.snort file
mkdir -p $PKG/etc/rc.d
cat $CWD/rc.snort > $PKG/etc/rc.d/rc.snort.new
chmod 0755 $PKG/etc/rc.d/rc.snort.new

# Create directory for logging
mkdir -p $PKG/var/log/snort

# Create directories for schemas and signatures
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/{schemas,signatures,SlackBuild}

# Create directory for dynamic rules
mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/snort_dynamicrules

# Add documentation files: readme, changelog and so on
cp -a $PKG/usr/share/doc/snort/README.u2boat COPYING ChangeLog LICENSE RELEASE.NOTES $PKG/usr/doc/$PKGNAME-$VERSION

rm -rf $PKG/usr/share

# Also add the slack-desk file and this slackbuild to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-desc
cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$PKGNAME.SlackBuild
cat $CWD/README.SLACKWARE > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/README.SLACKWARE
cat $CWD/rc.snort > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/rc.snort

# Compress the man pages if present
if [ -d $PKG/usr/man ]; then
    ( cd $PKG/usr/man
      find . -type f -exec gzip -9 {} \;
      for i in $( find . -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
    )
fi

# Find and print dependencies into slack-required file
cd $PKG
chown -R root:root $PKG
if [ -x /usr/bin/requiredbuilder ];then
requiredbuilder -y -v -s  $CWD $PKG
fi
# Create txz package
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi

#!/bin/sh
# Heavily based on the Slackware 14.0 SlackBuild
# http://www.emesene.org
# Packager Michelino Chionchio - www.slacky.eu
#
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# Required: wxPython, libmimic
#
# Exit on most errors
set -e


# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=emesene
TMP=${TMP:-/tmp/txz/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-1.6.3}
ARCH=${ARCH:-i686}
BUILD=${BUILD:-5}
TAG=${TAG:-sl}

# Download sorce tarball if still not present
SOURCE="http://sourceforge.net/projects/emesene/files/$PKGNAME-$VERSION/$PKGNAME-$VERSION.tar.gz"

if [ ! -e $CWD/$PKGNAME-$VERSION.tar.gz ]; then
 wget  $SOURCE
fi

# Create building directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT

# Decompress the source tarball
cd $TMP

echo -e "\E[0;32m+---------------------------+\E[0;0m"
echo -e "\E[0;32m| Start SlackBuild  emesene |\E[0;0m"
echo -e "\E[0;32m+---------------------------+\E[0;0m"

# Building emesene package
mkdir -p $PKG/usr/share
cd $PKG/usr/share
tar xvzf $CWD/$PKGNAME-$VERSION.tar.gz

# Adjust permissions and ownerships
cd $PKGNAME-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a-s .
cd -

# Adjust permissions and ownerships
cd $PKGNAME-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a-s .


mkdir -p $PKG/usr/bin
cat << EOF > $PKG/usr/bin/emesene
#!/bin/bash
emesene.bin --i-know-that-running-emesene-as-root-is-bad
EOF
chmod 755 $PKG/usr/bin/*


( cd $PKG/usr/bin
ln -s /usr/share/emesene-$VERSION/emesene emesene.bin )

mkdir -p $PKG/usr/share/icons/
cp -a $PKG/usr/share/emesene-$VERSION/smilies/default/Messenger.png $PKG/usr/share/icons/Messenger.png


mkdir -p  $PKG/usr/share/applications
cat << EOF > $PKG/usr/share/applications/$PKGNAME.desktop
[Desktop Entry]
Type=Application
Encoding=UTF-8
Name=emesene
GenericName=MSN Messenger
Comment=Windows Live Messenger (tm) network multiplatform client
Comment[it]=Client multipiattaforma per la rete di Windows Live Messenger(tm)
Icon=Messenger
Exec=emesene
Terminal=false
Categories=Application;Network;
EOF



#Add documentation files: readme, changelog and so on
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
mv $PKG/usr/share/$PKGNAME-$VERSION/{COPYING,*GPL,PSF,README} $PKG/usr/doc/$PKGNAME-$VERSION/
chmod 644 $PKG/usr/doc/$PKGNAME-$VERSION/*


# Also add the slack-desk file and this slackbuild to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-desc
cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$PKGNAME.SlackBuild





# Building some post-install execution script 	
	echo "if [ -x /usr/bin/update-desktop-database ]; then
  /usr/bin/update-desktop-database &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh
	echo "if [ -x /usr/bin/gtk-update-icon-cache ]; then
  /usr/bin/gtk-update-icon-cache  -f -q /usr/share/icons/hicolor &> /dev/null
fi" >> $PKG/install/doinst.sh
	echo "" >> $PKG/install/doinst.sh



# Find and print dependencies into slack-required file
cd $PKG
cd $PKG/usr/share/$PKGNAME-$VERSION/
python setup.py build_ext -i
cd $PKG
chown -R root:root $PKG
if [ -x /usr/bin/requiredbuilder ];then
ADD=$(ls /var/log/packages/ | sed -ne 's/\(libmimic\)-\([^-]\+-[^-]\+-[^-]\+\)/\1 >= \2,/p' \
-e 's/\(wxPython\)-\([^-]\+-[^-]\+-[^-]\+\)/\1 >= \2/p') \
requiredbuilder -y -v -s  $CWD $PKG
fi
# Create txz package
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}


# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi

